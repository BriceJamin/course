# -*- autofill-mode:true; fill-column: 40 -*-

Bonjour, et bienvenue dans le cours
python 3.

Je suis Thierry Parmentelat, et avec
Arnaud Legout je vous souhaite la
bienvenue dans ce cours sur python3.

========== cette semaine 

Durant cette première semaine nous
allons voir des généralités pour vous
laisser le temps de vous installer et de
vous familiariser avec les outils qu'on
utilisera dans le MOOC, puis nous
commencerons tout doucement le cours en
fin de semaine.

========== cette vidéo

Dans cette première vidéo, je vais
m'efforcer de vous décrire le programme,
et de manière générale comment le cours
est organisé.

========== contenu

Tout d'abord, je précise qu'il s'agit
d'une édition revue et augmentée du
cours sur python2 que nous avions joué
de 2014 à 2016, car depuis cette époque
l'écosystème python a largement basculé
du coté de python3.

Plus précisément notre référence, car il
faut bien en choisir une, est
python-3.6, qui date de fin 2016. Ce
n'est pas forcément une contrainte dure,
j'indiquerai dans un complément ce que
vous perdez si vous utilisez une version
plus ancienne de python3.

NOTE: 3.6 : released déc. 2016;
      3.7 : scheduled juin 2018

========== 2 grandes parties

Le cours est organisé en deux grandes
parties; pendant les 6 premières
semaines, on peut voir ça comme un tronc
commun, nous verrons les fondamentaux du
langage.

Au delà de ces 6 semaines, le cours sera
consacré à des applications et
approfondissements.

Je vais détailler ces deux parties dans
un instant, mais sachez que l'évaluation
portera sur le tronc commun uniquement,
dans la deuxième partie du cours vous
trouverez des chapitres optionnels, que
vous pouvez suivre ou non selon votre
curiosité.

========== tronc commun

pour donner un peu plus de détails, le
tronc commun couvre tous les traits du
langage qui sont d'une utilisation
courante, c'est-à-dire qu'on va
. commencer par les types de
base,
. on verra les fonctions et les
structures de contrôle
. on parlera du système de
modules qui permet de rendre le code
réutilisable,
. et enfin on finira par les classes qui
permettent la programmation orientée
objet. 

========== traits marquants

Tout au long du cours nous insisterons
sur les grands choix qui
ont été faits par les concepteurs du
langage, c'est-à-dire:

. une syntaxe conçue pour la lisibilité
. en python tout est objet
. la liaison statique
. le typage dynamique

et nous insisterons les mécanismes
généraux comme les mille et une façons
de faire des itérations, ainsi que les
espaces de nommage que l'on retrouve
presque partout dans le langage.


========== modules optionnels
s'agissant maintenant des modules
optionnels, à partir donc de la 7ème
semaine, nous vous proposons
essentiellement 3 directions
d'approfondissement, selon vos besoins

On commence par une semaine consacrée à
la data science; c'est naturellement un
sujet très vaste qui justifierait un
MOOC à lui tout seul, on va devoir se
limiter à une brève introduction, mais
il nous a semblé qu'on ne pouvait pas ne
pas parler à minima de numpy, matplotlib
et pandas, pour qu'au moins vous sachiez
que ça existe et en quoi ça peut vous
aider.

On étudiera aussi un nouveau paradigme
pour la programmation asynchrone, qui
repose sur des techniques de
programmation récentes, bien adaptées
typiquement à des applications réseau,
ou en tous cas où ce sont les
entrées-sortie qui donnent le tempo.
Ici encore c'est un sujet très vaste et
il n'est pas question d'en faire le
tour en une semaine, mais on va essayer
de vous faire sentir dans quelle optique
tout ça a été fait, et si vous êtes
un peu curieux je suis sûr que vous
trouverez ça intéressant.

Enfin dans la dernière semaine on
reviendra à du pur python, pour étudier
des mécanismes avancés du langage comme
notamment la gestion fine des attributs, 
les décorateurs, les métaclasses, et
autres sujets de ce genre. 


========== objectifs

que vous suiviez ou non les modules
optionnels, avec le tronc commun vous
aurez un bagage suffisant pour vous
permettre

. d'une part d'écrire un code
propre et lisible,

. d'autre part de 
comprendre le code que vous serez amenés
à lire
je vous conseille d'ailleurs de saisir
toutes les occasions pour lire du code,
c'est comme une langue étrangère, c'est
en lisant qu'on apprend le plus.

. et enfin pour vous permettre
d'appréhender et d'utiliser au mieux une
librairie tierce dont vous pourriez
avoir besoin.

On cherche donc à vous donner une très
bonne compréhension des fondamentaux du
langage; on signalera en passant
quelques librairies naturellement, mais
de manière opportuniste.


========== organisation du cours

en termes de supports pédagogiques,
chaque semaine vient avec naturellement

. un ensemble de vidéos, c'est selon les
semaines mais en général de l'ordre de
8.

. cela dit dans une vidéo on ne peut pas
vraiment faire le tour de la question,
donc pour approfondir vous trouverez
souvent des compléments, j'attire votre
attention sur la nécessité de suivre ces
compléments car la vidéo toute seule en
général ne fait que gratter la surface
du sujet.

. bien entendu il y aura également des
  quiz

. et enfin vous trouverez également
quelques exercices autoévalués.

Les compléments et les exercices ont été
réalisés sous forme de notebooks avec
une technologie qui s'appelle maintenant
jupyter. Ce sont des documents
interactifs qui mélangent du texte et du
code, je vous montrerai dans une
prochaine vidéo comment on les utilise,
vous verrez c'est très bien adapté à nos
besoins, on les utilise depuis plusieurs
années et c'est un gros succès auprès
des étudiants.

Ce qu'il faut en retenir c'est que vous
pourrez exécuter le code python au fur
et à mesure de votre lecture, et vous
pourrez aussi le modifier si vous êtes
curieux pour explorer une variante par
exemple. 

Pour les exercices auto-évalués, on vous
demandera d'écrire des fonctions ou des
classes, et vous pourrez vous-même
vérifier si votre code fait bien ce qui
est demandé.

========== niveaux de difficulté

vous remarquerez que tous ces supports
sont classés selon 3 niveaux de
difficulté: basique, intermédiaire et
avancé.

Bon c'est à prendre à titre
indicatif. L'idée c'est surtout de vous
permettre de gérer au mieux votre temps
et votre parcours en fonction de vos
intérêts. 

========== attestation

S'agissant des attestations de suivi, je
vais être prudent car par expérience
avec le MOOC précédent on peut
s'attendre à des modifications
d'une années sur l'autre. Du coup plutôt
que de décrire ça dans une vidéo qui est
compliquée à modifier, je vous invite à
lire le complément sur ce sujet. 

========== forum
pour conslure sur l'organisation du
mooc, pensez à utiliser le forum, vous
êtes un grand nombre d'étudiants, il y a
forcément quelqu'un qui a eu le même
problème que vous et qui connaît la
réponse.

N'hésitez pas à partager, que ce soit
des questions, des idées, des
commentaires, des suggestions, du code
aussi bien sûr, toutes les interactions
sont les bienvenues, un forum actif
c'est une partie de la richesse d'un
mooc réussi.

========== langue
enfin, pour dire dernier mot à propos de
la langue, le cours est entièrement en
français, mais la documentation de
référence est écrite en anglais; alors
bien sûr on peut trouver partiellement
des traductions en français, mais quoi
qu'il en soit, l'intégralité - on peut
dire - du code existant en python est
rédigé en anglais.

donc, nous avons essayé d'éviter au
maximum les anglicismes et autres
néologismes, mais sans non plus tomber
dans l'extrêmisme.

vous voudrez bien nous excuser si malgré
ça il reste des traces d'anglais dans le
cours.

========== compléments

Avant de vous retrouver dans la
prochaine vidéo, je vous invite à lire,
donc, les compléments qui sont attachés
à cette vidéo, et notamment concernant
les modalités de délivrance des
attestations.



