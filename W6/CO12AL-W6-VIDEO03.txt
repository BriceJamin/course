## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à afficher en surimpression pendant que je parle et à 
## synchroniser avec le texte entre crochet 

## TITRE : Exceptions

## Sujet de la vidéo ()

Depuis que nous avons commencé à jouer avec Python, vous les 
avez sans doute souvent rencontré, mais vous ne savez toujours
pas quoi en faire, ni exactement ce que c'est...
Ce sont les exceptions. 

Les exceptions sont le moyen en Python de gérer toutes
les erreurs de fonctionnement de votre programme. 
Et comme en Python tout est un objet, les exceptions aussi sont 
des objets. Mais il y 
a deux choses importantes à savoir sur les exceptions. 
Premièrement, une exception n'est pas une fatalité qui conduit
à l'arrêt du programme, on peut [capturer les exceptions] et prévoir
des traitements spécifiques pour continuer le programme. C'est
ce que nous allons voir dans cette vidéo.
Deuxièmement, les exceptions 
sont très [performantes] en Python, c'est d'ailleurs pour cela 
que l'exception StopIteration est utilisé par les itérateurs. 

[[
[On peut capturer les exceptions]
[Les exceptions sont performantes]
]]

 
Ouvrons maintenant un éditeur IDLE pour commencer à jouer 
avec les exceptions...

>>>>>>>>>> INCLUDE CO12AL-W6-VIDEO03-EXO01.py (6 minutes 50 s) <<<<<<<<<<


## Conclusion ()
Vous avez remarqué que je faisais toujours suivre une clause except
d'un nom d'exception. Ça n'est pas une obligation, je peux avoir
une clause except sans nom d'exception, et dans ce cas, ma clause
va capturer toutes les exceptions. C'est toujours une très mauvaise
idée de faire ça parce que vous risquez de capturer des exceptions
que vous n'avez pas prévu ou que vous ne connaissez pas. Votre
traitement ne sera donc pas approprié et votre programme risque
de planter sans message d'erreur ou avec un message d'erreur
ne correspondant pas au problème. 

Pour finir, vous devez sans doute vous demander comment connaître les
exceptions à capturer et leur signification. Il n'y a ici
aucune magie, la seule solution est de lire la documentation
pour connaître les exceptions built-in et la documentation
des modules que vous utilisez.  