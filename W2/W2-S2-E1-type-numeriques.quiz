# -*- coding: utf-8 -*-
<hr/>
Types numériques (1)
=====

Comment calculer la 16-ème puissance de 2

( ) <code>2 &amp; 16</code>
(x) <code>2 ** 16</code>
( ) <code>2 &amp;&amp; 16</code>
( ) <code>2 | 16</code>

[explanation]
Le signe puissance en python est **
[explanation]

<hr/>
Types numériques (2)
=====

Comment entrer la valeur du complexe 3 + 2i

( ) <code>3 + 2i</code>
(x) <code>3 + 2j</code>
( ) <code>3 + 2 * i</code>
( ) <code>3 + 2 * j</code>

[explanation]
Les anglais utilisent 'j' plutôt que notre 'i'
Les deux dernières formes font référence à une variable "normale" qui s'appellerait 'i' ou 'j'
[explanation]

<hr/>
Types numériques (3)
=====

Que retourne la formule

<pre>type(2 ** 16) == type(2 ** 8)</pre>

(x) <code>True</code>
( ) <code>False</code>

[explanation]
Ces deux puissances de 2 sont toutes deux assez petites pour être représentées par des entiers simples
[explanation]

<hr/>
Types numériques (4)
=====

Que retourne la formule

<pre>type(2 ** 200) == type(2 ** 8)</pre>

( ) <code>True</code>
(x) <code>False</code>

[explanation]
Par contre ici 2 ** 200 est beaucoup trop gros pour être représenté par un entier simple, c'est un entier long.
[explanation]

<hr/>
Types numériques (5)
=====

Que retourne la formule (avancé)

<pre>(2 ** 200) >> 196 == 2 ** 4</pre>

(x) <code>True</code>
( ) <code>False</code>

[explanation]
On a vu que le décalage vers la droite représente une division entière par 2 ** n

Donc 2 puissance 200, décalé à droite de 196 vaut bien 2 puissance 4

Par ailleurs, la comparaison d'un entier long et d'un entier simple de même valeur retourne - heureusement - True
[explanation]
