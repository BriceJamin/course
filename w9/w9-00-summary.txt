# -*- coding: utf-8 -*-
# -*- eval: (auto-fill-mode 0) -*-
###################################################################

Toute la semaine est de NIVEAU: AVANCÉ

Pas de quiz pour cette semaine du coup


# Vidéo 0 (Présentation de la neuvième semaine)

###################################################################

# Vidéo 1 Introduction à la programmation asynchrone

 . distinction CPU-intensif / IO-intensif;
 . exhiber un exemple simple (aller chercher plusieurs pages web) et montrer comment est utilisé le CPU
 . écarter rapidement le mode multi-CPUs (qui s'adresse aux applis CPU-intensifs)
 . mono CPU / multi-threads: pas de contrôle sur le context switching; sections critiques, dur à débugger...
 . callbacks: exhiber saucissonnage délirant https://cdn-images-1.medium.com/max/1600/1*cS467MRjN5awIWqFeD27XQ.jpeg
 . utilité de définir un modèle qui permette
  . la concurrence
  . single-thread
  . avec contrôle sur les changements de contexte


## Compléments Vidéo 1 
## Exercices Vidéo 1 


###################################################################

# Vidéo 2 Quelques exemples simples

 . plus petit exemple complet (une boucle, deux tâches qui font sleep())
 . conclure
    * (async def / await) pour définir les coroutines,
    * librairie asyncio pour la gestion des boucles d'événements (signaler par exemple curio)

 . montrer ce qui se passe si on appelle une coroutine sans await
   coroutine functions vs corotine
 . XXX un message d'erreur quand on oublie le await 

## Compléments Vidéo 2
## Exercices Vidéo 2

###################################################################

# Vidéo 3 écosystème asyncio

## Compléments Vidéo 3
## Exercices Vidéo 3

###################################################################

# Vidéo 4 Exemples plus réalistes

## Compléments Vidéo 5
## Exercices Vidéo 5

###################################################################

# Vidéo 4 bonnes pratiques de développement / exceptions

## Compléments Vidéo 4
## Exercices Vidéo 4

###################################################################

# Vidéo 6 Générateurs revisités

## Compléments Vidéo 6
## Exercices Vidéo 6

####################

ideas

* pour les complements, ajouter un lien vers
https://www.youtube.com/watch?v=2ZFFv-wZ8_g

* un dessin de l'exécution d'un code tout petit avec un appel de coroutines
https://docs.python.org/3/library/asyncio-task.html#asyncio.ensure_future

* mentionner C# et JavaScript

* still missing: async lambdas - probably 3.7

* awaitable protocol

* montrer un serveur TCP encore + basique tel que dans
https://www.python.org/dev/peps/pep-0492/#types-coroutine
