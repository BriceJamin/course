## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à afficher en surimpression pendant que je parle et à 
## synchroniser avec le texte entre crochet 

##  TITRE : Méthodes statiques et de classe

## Sujet de la semaine ()



## Résumé de la vidéo ()

Nous avons vu que les méthodes dans les classes devaient 
obligatoirement avoir comme premier paramètre une instance. 
On appelle ces méthodes des méthodes d'instance. Par conséquent, 
on ne peut pas appeler une méthode d'instance sur une classe 
si on n'a pas d'instance. 

Dans certains cas, il peut être utile d'appeler une méthode sur
une classe sans passer par une instance. Par exemple, 
on pourrait concevoir une classe comme une boite à outils
qui regroupe des méthodes ne travaillant pas sur des 
instances de la classe, mais sur d'autres objets. 
On peut déjà faire ça avec des modules, mais avec les modules
on ne peut pas structurer des classes en exploitant l'héritage. 

En Python, Il est possible de créer des méthodes dans une 
classe qui peuvent être appelées sans instance. On appelle 
ces méthodes des méthodes statiques. 

Ouvrons un terminal pour jouer avec les méthodes statiques...

>>>>>>>>>> INCLUDE CO12AL-W7-VIDEO01-EXO01.py (8 minutes) <<<<<<<<<<

Les méthodes statiques et de classes permettent de définir des méthodes
dans une classe qui n'ont pas besoin d'instance pour s'exécuter. 
Ces deux types de méthode sont proches, on préfèrera la methode 
statiques lorsque l'on a besoin du même comportement pour toutes
les sous classes, et la méthode de classe si l'on veut un 
comportement différencié. 