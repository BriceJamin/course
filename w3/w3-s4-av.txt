# -*- coding: utf-8 -*-
# -*- fill-column: 54 -*-
#
## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à synchroniser avec les slides. [SB] signifie slide blanc,
## c'est à dire qu'il n'y pas de transparent affiché à ce moment (ou
## un transparent blanc). [Si] signifie que l'on doit se trouver sur
## le slide i

## TITRE : Les dictionnaires 
## Temp total: 7m40s


## Résumé de la vidéo (1m00s)

Dans cette vidéo nous allons voir comment utiliser les dictionnaires
en Python. Un dictionnaire est une table de hash qui peut être vu
comme un ensemble non ordonné de couples (clef, valeur) où toutes les
clefs sont uniques. Le dictionnaire est optimisé pour l'accès aux
clefs dont la performance est idépendante du nombre de clefs. De plus,
le dictionnaire est un type mutable, c'est-à-dire qu'on peut le
modifier en place, c'est donc une structure de données souple et
puissante.

Comme un dictionnaire est implémenté comme une table de hash, seul
les objets hashables peuvent être utilisés comme clef d'un
dictionnaire.  Qu'est-ce qu'un objet hashable, c'est un objet
qui peut être passé à une fonction de hash. Chez les types built-in
tous les immuables sont hashables et tous les mutables ne sont pas
hashable. L'intuition derrière est que comme la fonction de hash fait
un calcul sur l'objet et que pour un même objet, elle doit toujours
donner la même case dans le tableau, cet objet ne peut pas changer de
valeur en cours d'exécution.  Donc une clef en Python peut-être, par
exemple, un type numérique, une chaîne de caractères, ou un tuple
d'immuable.

Les dictionnaires sont des objets très puissants qui permettent de
faire facilement certaines taches qui sont avec d'autres langages
longue et fastidieuse à écrire.

Ouvrons un interpréteur Python pour commencer à jouer avec les
dictionnaires.


>>>>>>>>>> W3-S4-AV-exo1.py <<<<<<<<<< (6m10s)

## Résumé de la vidéo (30s)

Nous avons vu dans cette vidéo le fonctionnement des dictionnaires, un
nouveau type puissant qui permet de créer un agenda ou un annuaire en
seulement quelques lignes de code et nous avons vu le concept de vue.
Les dictionnaires sont également optimisés pour la recherche de clef,
c'est donc le type à utiliser lorsque vous avez besoin de performance
pour la recherche d'éléments, avec la resctriction que vos clefs
doivent nécessairement être des objets hashables.

À bientôt
