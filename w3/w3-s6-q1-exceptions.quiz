Exceptions (1)
=====

Cochez la ou les affirmations exactes.

[ ] Une exception provoque toujours l'arrêt du programme.
[ ] Une exception non capturée est perdue.
[x] Une exception non capturée remonte la pile d'exécution.
[x] Les exceptions représentent le mécanisme standard de notification des erreurs d'exécution dans un programme.
[x] On peut capturer une exception et déclencher une action pour corriger le problème notifié.

[explanation]
Une exception capturée ne va pas provoquer l'arrêt du programme. Il existe également des exceptions (comme StopIteration) qui sont automatiquement capturées (par exemple, par une boucle for) sans provoquer d'arrêt du programme.

Une exception non capturée n'est jamais perdue, elle remonte la pile d'exécution jusqu'au moment où elle provoque l'arrêt du programme.

Les exceptions sont très efficaces en Python et sont utilisées de manière standard pour communiquer à l'intérieur d'un programme.

Avec une instruction <code>try except</code>, on peut capturer une exception et faire une action corrective.
[explanation]


<hr/>
Exceptions (2)
=====

On a du code qui peut produire une exception <code>TypeError</code>. Cochez les affirmations qui sont correctes :

[ ] Il vaut mieux capturer avec une instruction <code>except Exception</code>, plutôt que <code>except TypeError</code>, ainsi notre code sera plus robuste.
[x] On peut capturer l'exception n'importe où le long de la pile d'exécution.
[x] Il vaut mieux capturer l'exception au plus proche de là où elle est produite.



[explanation]
Le langage permet en effet de capturer toutes les exceptions d'un coup avec <code>except Exception:</code>; toutefois cette pratique est peu recommandée, dans notre cas de figure le mieux est d'attraper seulement les exceptions de la classe <code>TypeError</code>, mais de laisser passer toutes les autres, qui pourront être traitées par l'appelant; si on capturait <code>Exception</code>, on se mettrait alors en position d'étouffer des erreurs graves, qui ne seront plus du tout notifiées à l'appelant.

Une exception peut se capturer n'importe où dans la pile d'exécution, mais on recommande en général de capturer l'exception au plus près de là où elle est produite.
[explanation]
