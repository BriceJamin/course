# -*- coding: utf-8 -*-
# -*- fill-column: 54 -*-
#
## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à synchroniser avec les slides. [SB] signifie slide blanc,
## c'est à dire qu'il n'y pas de transparent affiché à ce moment (ou
## un transparent blanc). [Si] signifie que l'on doit se trouver sur
## le slide i

## TITRE : Tables de hash
## Temp total: 8m00s

## Résumé de la vidéo (20s)

Nous avons vu jusqu'à maintenant les types séquences qui sont des
types très puissants combinant souplesse et facilité d'utilisation.
Dans cette vidéo nous allons parler des tables de hash, une structure
de données qui permet de répondre aux limitations des types séquences.

Ouvrons un interpréteur Python pour comprendre ces limitations.

>>>>>>>>>> W3-S3-AV-exo1.py (3m40) <<<<<<<<<<

>>>>>>>>>> W3-S3-AV-slide1.pptx (3m30) <<<<<<<<<<

## Résumé de la vidéo (30s)

Les tables de hash permettent un temps d'insertion, d'accès mais aussi
de test d'appartenance indépendant du nombre d'éléments. Les tables de
hash permettent également d'indéxer les éléments non pas uniquement
avec des entiers, mais égalememt avec des objets plus complexe comme
des chaînes de caractères. 

Il existe en Python deux implémentations de tables de hash, ce sont
les dictionnaires et les ensembles. Nous verrons comment utiliser ces
deux nouveaux types dans de prochaines vidéos.

À bientôt.
